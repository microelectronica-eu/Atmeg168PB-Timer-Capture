
Atmega168PB_Timer_Capture.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800100  000006e0  00000774  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000006e0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000007  0080010c  0080010c  00000780  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000780  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000007b0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  000007f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c76  00000000  00000000  00000878  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008fd  00000000  00000000  000014ee  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004f8  00000000  00000000  00001deb  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000128  00000000  00000000  000022e4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004cc  00000000  00000000  0000240c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000cb8  00000000  00000000  000028d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000068  00000000  00000000  00003590  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 36 00 	jmp	0x6c	; 0x6c <__ctors_end>
   4:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
   8:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
   c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  10:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  14:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  18:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  1c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  20:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  24:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  28:	0c 94 93 00 	jmp	0x126	; 0x126 <__vector_10>
  2c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  30:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  34:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  38:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  3c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  40:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  44:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  48:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  4c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  50:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  54:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  58:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  5c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  60:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  64:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  68:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>

0000006c <__ctors_end>:
  6c:	11 24       	eor	r1, r1
  6e:	1f be       	out	0x3f, r1	; 63
  70:	cf ef       	ldi	r28, 0xFF	; 255
  72:	d4 e0       	ldi	r29, 0x04	; 4
  74:	de bf       	out	0x3e, r29	; 62
  76:	cd bf       	out	0x3d, r28	; 61

00000078 <__do_copy_data>:
  78:	11 e0       	ldi	r17, 0x01	; 1
  7a:	a0 e0       	ldi	r26, 0x00	; 0
  7c:	b1 e0       	ldi	r27, 0x01	; 1
  7e:	e0 ee       	ldi	r30, 0xE0	; 224
  80:	f6 e0       	ldi	r31, 0x06	; 6
  82:	02 c0       	rjmp	.+4      	; 0x88 <__do_copy_data+0x10>
  84:	05 90       	lpm	r0, Z+
  86:	0d 92       	st	X+, r0
  88:	ac 30       	cpi	r26, 0x0C	; 12
  8a:	b1 07       	cpc	r27, r17
  8c:	d9 f7       	brne	.-10     	; 0x84 <__do_copy_data+0xc>

0000008e <__do_clear_bss>:
  8e:	21 e0       	ldi	r18, 0x01	; 1
  90:	ac e0       	ldi	r26, 0x0C	; 12
  92:	b1 e0       	ldi	r27, 0x01	; 1
  94:	01 c0       	rjmp	.+2      	; 0x98 <.do_clear_bss_start>

00000096 <.do_clear_bss_loop>:
  96:	1d 92       	st	X+, r1

00000098 <.do_clear_bss_start>:
  98:	a3 31       	cpi	r26, 0x13	; 19
  9a:	b2 07       	cpc	r27, r18
  9c:	e1 f7       	brne	.-8      	; 0x96 <.do_clear_bss_loop>
  9e:	0e 94 7e 01 	call	0x2fc	; 0x2fc <main>
  a2:	0c 94 6e 03 	jmp	0x6dc	; 0x6dc <_exit>

000000a6 <__bad_interrupt>:
  a6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000aa <Serial_send>:
	
void print_char(char c){   // print one character , can be used to send one character 
    
	    unsigned char send_data;
	    send_data=c;
        write_data(send_data) ;
  aa:	98 e0       	ldi	r25, 0x08	; 8
  ac:	71 98       	cbi	0x0e, 1	; 14
  ae:	88 23       	and	r24, r24
  b0:	14 f4       	brge	.+4      	; 0xb6 <Serial_send+0xc>
  b2:	70 9a       	sbi	0x0e, 0	; 14
  b4:	01 c0       	rjmp	.+2      	; 0xb8 <Serial_send+0xe>
  b6:	70 98       	cbi	0x0e, 0	; 14
  b8:	71 9a       	sbi	0x0e, 1	; 14
  ba:	88 0f       	add	r24, r24
  bc:	91 50       	subi	r25, 0x01	; 1
  be:	b1 f7       	brne	.-20     	; 0xac <Serial_send+0x2>
  c0:	08 95       	ret

000000c2 <delay>:
  c2:	80 e1       	ldi	r24, 0x10	; 16
  c4:	97 e2       	ldi	r25, 0x27	; 39
  c6:	00 00       	nop
  c8:	01 97       	sbiw	r24, 0x01	; 1
  ca:	e9 f7       	brne	.-6      	; 0xc6 <delay+0x4>
  cc:	08 95       	ret

000000ce <write_inst>:
  ce:	5e 98       	cbi	0x0b, 6	; 11
  d0:	0e 94 55 00 	call	0xaa	; 0xaa <Serial_send>
  d4:	5f 9a       	sbi	0x0b, 7	; 11
  d6:	0e 94 61 00 	call	0xc2	; 0xc2 <delay>
  da:	5f 98       	cbi	0x0b, 7	; 11
  dc:	08 95       	ret

000000de <init_LCD>:
  de:	81 e0       	ldi	r24, 0x01	; 1
  e0:	0e 94 67 00 	call	0xce	; 0xce <write_inst>
  e4:	88 e3       	ldi	r24, 0x38	; 56
  e6:	0e 94 67 00 	call	0xce	; 0xce <write_inst>
  ea:	8c e0       	ldi	r24, 0x0C	; 12
  ec:	0e 94 67 00 	call	0xce	; 0xce <write_inst>
  f0:	86 e0       	ldi	r24, 0x06	; 6
  f2:	0e 94 67 00 	call	0xce	; 0xce <write_inst>
  f6:	08 95       	ret

000000f8 <write_data>:
  f8:	5e 9a       	sbi	0x0b, 6	; 11
  fa:	0e 94 55 00 	call	0xaa	; 0xaa <Serial_send>
  fe:	5f 9a       	sbi	0x0b, 7	; 11
 100:	0e 94 61 00 	call	0xc2	; 0xc2 <delay>
 104:	5f 98       	cbi	0x0b, 7	; 11
 106:	08 95       	ret

00000108 <print_string>:

#include <avr/io.h>
#include "LCD_Code_2x16_serial.h"


void print_string(char * message){   
 108:	cf 93       	push	r28
 10a:	df 93       	push	r29
 10c:	ec 01       	movw	r28, r24
	
	// Write message to LCD (C string type)
     while (*message)
 10e:	88 81       	ld	r24, Y
 110:	88 23       	and	r24, r24
 112:	31 f0       	breq	.+12     	; 0x120 <print_string+0x18>
 114:	21 96       	adiw	r28, 0x01	; 1
	
void print_char(char c){   // print one character , can be used to send one character 
    
	    unsigned char send_data;
	    send_data=c;
        write_data(send_data) ;
 116:	0e 94 7c 00 	call	0xf8	; 0xf8 <write_data>


void print_string(char * message){   
	
	// Write message to LCD (C string type)
     while (*message)
 11a:	89 91       	ld	r24, Y+
 11c:	81 11       	cpse	r24, r1
 11e:	fb cf       	rjmp	.-10     	; 0x116 <print_string+0xe>
	 {            // Look for end of string
        print_char(*message++);
     }

} 	
 120:	df 91       	pop	r29
 122:	cf 91       	pop	r28
 124:	08 95       	ret

00000126 <__vector_10>:
void math(unsigned char LCD_Address, unsigned int MATH_DATA);



ISR(TIMER1_CAPT_vect)
{
 126:	1f 92       	push	r1
 128:	0f 92       	push	r0
 12a:	0f b6       	in	r0, 0x3f	; 63
 12c:	0f 92       	push	r0
 12e:	11 24       	eor	r1, r1
 130:	8f 93       	push	r24
 132:	9f 93       	push	r25
 134:	ef 93       	push	r30
 136:	ff 93       	push	r31
	
	Count=0;
 138:	10 92 0d 01 	sts	0x010D, r1	; 0x80010d <__data_end+0x1>
 13c:	10 92 0c 01 	sts	0x010C, r1	; 0x80010c <__data_end>
	Count=TCNT1 ; //ICR1
 140:	e4 e8       	ldi	r30, 0x84	; 132
 142:	f0 e0       	ldi	r31, 0x00	; 0
 144:	80 81       	ld	r24, Z
 146:	91 81       	ldd	r25, Z+1	; 0x01
 148:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <__data_end+0x1>
 14c:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <__data_end>
 	TCNT1=0;
 150:	11 82       	std	Z+1, r1	; 0x01
 152:	10 82       	st	Z, r1

}
 154:	ff 91       	pop	r31
 156:	ef 91       	pop	r30
 158:	9f 91       	pop	r25
 15a:	8f 91       	pop	r24
 15c:	0f 90       	pop	r0
 15e:	0f be       	out	0x3f, r0	; 63
 160:	0f 90       	pop	r0
 162:	1f 90       	pop	r1
 164:	18 95       	reti

00000166 <CounterInit>:
   
}

void CounterInit(void)
{   
	TCCR1B = (1<<ICNC1)|(1<<CS10); // External clock source on T1 pin. Clock on rising edge.(1<<ICNC1)|
 166:	81 e8       	ldi	r24, 0x81	; 129
 168:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
	TIFR1  = 1<<ICF1;
 16c:	80 e2       	ldi	r24, 0x20	; 32
 16e:	86 bb       	out	0x16, r24	; 22
	TIMSK1 = 1<<ICIE1;
 170:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__DATA_REGION_ORIGIN__+0xf>
 174:	08 95       	ret

00000176 <math>:
	
}

void math(unsigned char LCD_Address, unsigned int MATH_DATA)
{
 176:	cf 92       	push	r12
 178:	df 92       	push	r13
 17a:	ef 92       	push	r14
 17c:	ff 92       	push	r15
 17e:	0f 93       	push	r16
 180:	1f 93       	push	r17
 182:	cf 93       	push	r28
 184:	c8 2f       	mov	r28, r24
 186:	fb 01       	movw	r30, r22
	
	mat= MATH_DATA ;
	
	
	zecemii=mat/10000 ;
	mat=mat%10000 ;
 188:	6b 01       	movw	r12, r22
 18a:	d6 94       	lsr	r13
 18c:	c7 94       	ror	r12
 18e:	d6 94       	lsr	r13
 190:	c7 94       	ror	r12
 192:	d6 94       	lsr	r13
 194:	c7 94       	ror	r12
 196:	d6 94       	lsr	r13
 198:	c7 94       	ror	r12
 19a:	96 01       	movw	r18, r12
 19c:	a7 e4       	ldi	r26, 0x47	; 71
 19e:	b3 e0       	ldi	r27, 0x03	; 3
 1a0:	0e 94 5f 03 	call	0x6be	; 0x6be <__umulhisi3>
 1a4:	ac 01       	movw	r20, r24
 1a6:	56 95       	lsr	r21
 1a8:	47 95       	ror	r20
 1aa:	56 95       	lsr	r21
 1ac:	47 95       	ror	r20
 1ae:	56 95       	lsr	r21
 1b0:	47 95       	ror	r20
 1b2:	20 e1       	ldi	r18, 0x10	; 16
 1b4:	37 e2       	ldi	r19, 0x27	; 39
 1b6:	42 9f       	mul	r20, r18
 1b8:	c0 01       	movw	r24, r0
 1ba:	43 9f       	mul	r20, r19
 1bc:	90 0d       	add	r25, r0
 1be:	52 9f       	mul	r21, r18
 1c0:	90 0d       	add	r25, r0
 1c2:	11 24       	eor	r1, r1
 1c4:	af 01       	movw	r20, r30
 1c6:	48 1b       	sub	r20, r24
 1c8:	59 0b       	sbc	r21, r25
	mii= mat/1000;
	mat= mat%1000 ;
 1ca:	7a 01       	movw	r14, r20
 1cc:	f6 94       	lsr	r15
 1ce:	e7 94       	ror	r14
 1d0:	f6 94       	lsr	r15
 1d2:	e7 94       	ror	r14
 1d4:	f6 94       	lsr	r15
 1d6:	e7 94       	ror	r14
 1d8:	97 01       	movw	r18, r14
 1da:	a5 ec       	ldi	r26, 0xC5	; 197
 1dc:	b0 e2       	ldi	r27, 0x20	; 32
 1de:	0e 94 5f 03 	call	0x6be	; 0x6be <__umulhisi3>
 1e2:	fc 01       	movw	r30, r24
 1e4:	f2 95       	swap	r31
 1e6:	e2 95       	swap	r30
 1e8:	ef 70       	andi	r30, 0x0F	; 15
 1ea:	ef 27       	eor	r30, r31
 1ec:	ff 70       	andi	r31, 0x0F	; 15
 1ee:	ef 27       	eor	r30, r31
 1f0:	28 ee       	ldi	r18, 0xE8	; 232
 1f2:	33 e0       	ldi	r19, 0x03	; 3
 1f4:	e2 9f       	mul	r30, r18
 1f6:	c0 01       	movw	r24, r0
 1f8:	e3 9f       	mul	r30, r19
 1fa:	90 0d       	add	r25, r0
 1fc:	f2 9f       	mul	r31, r18
 1fe:	90 0d       	add	r25, r0
 200:	11 24       	eor	r1, r1
 202:	fa 01       	movw	r30, r20
 204:	e8 1b       	sub	r30, r24
 206:	f9 0b       	sbc	r31, r25
	sute= mat/100 ;
	mat= mat%100 ;
 208:	8f 01       	movw	r16, r30
 20a:	16 95       	lsr	r17
 20c:	07 95       	ror	r16
 20e:	16 95       	lsr	r17
 210:	07 95       	ror	r16
 212:	98 01       	movw	r18, r16
 214:	ab e7       	ldi	r26, 0x7B	; 123
 216:	b4 e1       	ldi	r27, 0x14	; 20
 218:	0e 94 5f 03 	call	0x6be	; 0x6be <__umulhisi3>
 21c:	ac 01       	movw	r20, r24
 21e:	56 95       	lsr	r21
 220:	47 95       	ror	r20
 222:	24 e6       	ldi	r18, 0x64	; 100
 224:	24 9f       	mul	r18, r20
 226:	c0 01       	movw	r24, r0
 228:	25 9f       	mul	r18, r21
 22a:	90 0d       	add	r25, r0
 22c:	11 24       	eor	r1, r1
 22e:	af 01       	movw	r20, r30
 230:	48 1b       	sub	r20, r24
 232:	59 0b       	sbc	r21, r25
	zeci=	mat/10  ;
	unitati= mat%10  ;

	
	a1 = zecemii + 0x30 ;
 234:	96 01       	movw	r18, r12
 236:	a7 e4       	ldi	r26, 0x47	; 71
 238:	b3 e0       	ldi	r27, 0x03	; 3
 23a:	0e 94 5f 03 	call	0x6be	; 0x6be <__umulhisi3>
 23e:	96 95       	lsr	r25
 240:	87 95       	ror	r24
 242:	96 95       	lsr	r25
 244:	87 95       	ror	r24
 246:	96 95       	lsr	r25
 248:	87 95       	ror	r24
 24a:	80 5d       	subi	r24, 0xD0	; 208
 24c:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <a1>
	b1 = mii + 0x30 ;
 250:	97 01       	movw	r18, r14
 252:	a5 ec       	ldi	r26, 0xC5	; 197
 254:	b0 e2       	ldi	r27, 0x20	; 32
 256:	0e 94 5f 03 	call	0x6be	; 0x6be <__umulhisi3>
 25a:	92 95       	swap	r25
 25c:	82 95       	swap	r24
 25e:	8f 70       	andi	r24, 0x0F	; 15
 260:	89 27       	eor	r24, r25
 262:	9f 70       	andi	r25, 0x0F	; 15
 264:	89 27       	eor	r24, r25
 266:	80 5d       	subi	r24, 0xD0	; 208
 268:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <b1>
	c1 = sute + 0x30 ;
 26c:	98 01       	movw	r18, r16
 26e:	ab e7       	ldi	r26, 0x7B	; 123
 270:	b4 e1       	ldi	r27, 0x14	; 20
 272:	0e 94 5f 03 	call	0x6be	; 0x6be <__umulhisi3>
 276:	96 95       	lsr	r25
 278:	87 95       	ror	r24
 27a:	80 5d       	subi	r24, 0xD0	; 208
 27c:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <c1>
	d1 = zeci + 0x30;
 280:	9a 01       	movw	r18, r20
 282:	ad ec       	ldi	r26, 0xCD	; 205
 284:	bc ec       	ldi	r27, 0xCC	; 204
 286:	0e 94 5f 03 	call	0x6be	; 0x6be <__umulhisi3>
 28a:	96 95       	lsr	r25
 28c:	87 95       	ror	r24
 28e:	96 95       	lsr	r25
 290:	87 95       	ror	r24
 292:	96 95       	lsr	r25
 294:	87 95       	ror	r24
 296:	20 e3       	ldi	r18, 0x30	; 48
 298:	28 0f       	add	r18, r24
 29a:	20 93 0e 01 	sts	0x010E, r18	; 0x80010e <d1>
	e1 = unitati + 0x30;
 29e:	9c 01       	movw	r18, r24
 2a0:	22 0f       	add	r18, r18
 2a2:	33 1f       	adc	r19, r19
 2a4:	88 0f       	add	r24, r24
 2a6:	99 1f       	adc	r25, r25
 2a8:	88 0f       	add	r24, r24
 2aa:	99 1f       	adc	r25, r25
 2ac:	88 0f       	add	r24, r24
 2ae:	99 1f       	adc	r25, r25
 2b0:	82 0f       	add	r24, r18
 2b2:	93 1f       	adc	r25, r19
 2b4:	48 1b       	sub	r20, r24
 2b6:	59 0b       	sbc	r21, r25
 2b8:	40 5d       	subi	r20, 0xD0	; 208
 2ba:	40 93 12 01 	sts	0x0112, r20	; 0x800112 <e1>
	
	 write_inst(LCD_Address);
 2be:	8c 2f       	mov	r24, r28
 2c0:	0e 94 67 00 	call	0xce	; 0xce <write_inst>
	 write_data(a1) ;
 2c4:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <a1>
 2c8:	0e 94 7c 00 	call	0xf8	; 0xf8 <write_data>
	 write_data(b1) ;
 2cc:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <b1>
 2d0:	0e 94 7c 00 	call	0xf8	; 0xf8 <write_data>
	 write_data(c1) ;
 2d4:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <c1>
 2d8:	0e 94 7c 00 	call	0xf8	; 0xf8 <write_data>
	 write_data(d1) ;
 2dc:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <d1>
 2e0:	0e 94 7c 00 	call	0xf8	; 0xf8 <write_data>
	 write_data(e1) ;// 0xc5
 2e4:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <e1>
 2e8:	0e 94 7c 00 	call	0xf8	; 0xf8 <write_data>
}
 2ec:	cf 91       	pop	r28
 2ee:	1f 91       	pop	r17
 2f0:	0f 91       	pop	r16
 2f2:	ff 90       	pop	r15
 2f4:	ef 90       	pop	r14
 2f6:	df 90       	pop	r13
 2f8:	cf 90       	pop	r12
 2fa:	08 95       	ret

000002fc <main>:
}


int main(void)
{
     DDRE= 0xFF ;
 2fc:	8f ef       	ldi	r24, 0xFF	; 255
 2fe:	8d b9       	out	0x0d, r24	; 13
     DDRB= 0xFE ;
 300:	9e ef       	ldi	r25, 0xFE	; 254
 302:	94 b9       	out	0x04, r25	; 4
     DDRC= 0xFF;
 304:	87 b9       	out	0x07, r24	; 7
     DDRD= 0xFF ;
 306:	8a b9       	out	0x0a, r24	; 10
     
     PORTE=0x00;
 308:	1e b8       	out	0x0e, r1	; 14
     PORTB=0x00;
 30a:	15 b8       	out	0x05, r1	; 5
     PORTC=0x00;
 30c:	18 b8       	out	0x08, r1	; 8
     PORTD=0x00;
 30e:	1b b8       	out	0x0b, r1	; 11
	 init_LCD();
 310:	0e 94 6f 00 	call	0xde	; 0xde <init_LCD>
	 CounterInit();
 314:	0e 94 b3 00 	call	0x166	; 0x166 <CounterInit>
	 write_inst(0x80);  // 0x80 first row 0xc0 second row
 318:	80 e8       	ldi	r24, 0x80	; 128
 31a:	0e 94 67 00 	call	0xce	; 0xce <write_inst>
	 print_string("Timmer test");
 31e:	80 e0       	ldi	r24, 0x00	; 0
 320:	91 e0       	ldi	r25, 0x01	; 1
 322:	0e 94 84 00 	call	0x108	; 0x108 <print_string>
	 sei();
 326:	78 94       	sei
	 unsigned int local ;
	 double	data1;
    while (1) 
    {
		 
		  math(0xc0,Count);
 328:	60 91 0c 01 	lds	r22, 0x010C	; 0x80010c <__data_end>
 32c:	70 91 0d 01 	lds	r23, 0x010D	; 0x80010d <__data_end+0x1>
 330:	80 ec       	ldi	r24, 0xC0	; 192
 332:	0e 94 bb 00 	call	0x176	; 0x176 <math>
		  
		  data1=Count;
		  local=(1/((62.5*data1)/1000000000)); // Hz value
		  
		  math(0xcA,local);
 336:	60 91 0c 01 	lds	r22, 0x010C	; 0x80010c <__data_end>
 33a:	70 91 0d 01 	lds	r23, 0x010D	; 0x80010d <__data_end+0x1>
 33e:	80 e0       	ldi	r24, 0x00	; 0
 340:	90 e0       	ldi	r25, 0x00	; 0
 342:	0e 94 64 02 	call	0x4c8	; 0x4c8 <__floatunsisf>
 346:	20 e0       	ldi	r18, 0x00	; 0
 348:	30 e0       	ldi	r19, 0x00	; 0
 34a:	4a e7       	ldi	r20, 0x7A	; 122
 34c:	52 e4       	ldi	r21, 0x42	; 66
 34e:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <__mulsf3>
 352:	28 e2       	ldi	r18, 0x28	; 40
 354:	3b e6       	ldi	r19, 0x6B	; 107
 356:	4e e6       	ldi	r20, 0x6E	; 110
 358:	5e e4       	ldi	r21, 0x4E	; 78
 35a:	0e 94 c3 01 	call	0x386	; 0x386 <__divsf3>
 35e:	9b 01       	movw	r18, r22
 360:	ac 01       	movw	r20, r24
 362:	60 e0       	ldi	r22, 0x00	; 0
 364:	70 e0       	ldi	r23, 0x00	; 0
 366:	80 e8       	ldi	r24, 0x80	; 128
 368:	9f e3       	ldi	r25, 0x3F	; 63
 36a:	0e 94 c3 01 	call	0x386	; 0x386 <__divsf3>
 36e:	0e 94 35 02 	call	0x46a	; 0x46a <__fixunssfsi>
 372:	8a ec       	ldi	r24, 0xCA	; 202
 374:	0e 94 bb 00 	call	0x176	; 0x176 <math>
		  write_data('H') ;
 378:	88 e4       	ldi	r24, 0x48	; 72
 37a:	0e 94 7c 00 	call	0xf8	; 0xf8 <write_data>
		  write_data('z') ;
 37e:	8a e7       	ldi	r24, 0x7A	; 122
 380:	0e 94 7c 00 	call	0xf8	; 0xf8 <write_data>
 384:	d1 cf       	rjmp	.-94     	; 0x328 <main+0x2c>

00000386 <__divsf3>:
 386:	0e 94 d7 01 	call	0x3ae	; 0x3ae <__divsf3x>
 38a:	0c 94 b8 02 	jmp	0x570	; 0x570 <__fp_round>
 38e:	0e 94 b1 02 	call	0x562	; 0x562 <__fp_pscB>
 392:	58 f0       	brcs	.+22     	; 0x3aa <__divsf3+0x24>
 394:	0e 94 aa 02 	call	0x554	; 0x554 <__fp_pscA>
 398:	40 f0       	brcs	.+16     	; 0x3aa <__divsf3+0x24>
 39a:	29 f4       	brne	.+10     	; 0x3a6 <__divsf3+0x20>
 39c:	5f 3f       	cpi	r21, 0xFF	; 255
 39e:	29 f0       	breq	.+10     	; 0x3aa <__divsf3+0x24>
 3a0:	0c 94 a1 02 	jmp	0x542	; 0x542 <__fp_inf>
 3a4:	51 11       	cpse	r21, r1
 3a6:	0c 94 ec 02 	jmp	0x5d8	; 0x5d8 <__fp_szero>
 3aa:	0c 94 a7 02 	jmp	0x54e	; 0x54e <__fp_nan>

000003ae <__divsf3x>:
 3ae:	0e 94 c9 02 	call	0x592	; 0x592 <__fp_split3>
 3b2:	68 f3       	brcs	.-38     	; 0x38e <__divsf3+0x8>

000003b4 <__divsf3_pse>:
 3b4:	99 23       	and	r25, r25
 3b6:	b1 f3       	breq	.-20     	; 0x3a4 <__divsf3+0x1e>
 3b8:	55 23       	and	r21, r21
 3ba:	91 f3       	breq	.-28     	; 0x3a0 <__divsf3+0x1a>
 3bc:	95 1b       	sub	r25, r21
 3be:	55 0b       	sbc	r21, r21
 3c0:	bb 27       	eor	r27, r27
 3c2:	aa 27       	eor	r26, r26
 3c4:	62 17       	cp	r22, r18
 3c6:	73 07       	cpc	r23, r19
 3c8:	84 07       	cpc	r24, r20
 3ca:	38 f0       	brcs	.+14     	; 0x3da <__divsf3_pse+0x26>
 3cc:	9f 5f       	subi	r25, 0xFF	; 255
 3ce:	5f 4f       	sbci	r21, 0xFF	; 255
 3d0:	22 0f       	add	r18, r18
 3d2:	33 1f       	adc	r19, r19
 3d4:	44 1f       	adc	r20, r20
 3d6:	aa 1f       	adc	r26, r26
 3d8:	a9 f3       	breq	.-22     	; 0x3c4 <__divsf3_pse+0x10>
 3da:	35 d0       	rcall	.+106    	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 3dc:	0e 2e       	mov	r0, r30
 3de:	3a f0       	brmi	.+14     	; 0x3ee <__divsf3_pse+0x3a>
 3e0:	e0 e8       	ldi	r30, 0x80	; 128
 3e2:	32 d0       	rcall	.+100    	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
 3e4:	91 50       	subi	r25, 0x01	; 1
 3e6:	50 40       	sbci	r21, 0x00	; 0
 3e8:	e6 95       	lsr	r30
 3ea:	00 1c       	adc	r0, r0
 3ec:	ca f7       	brpl	.-14     	; 0x3e0 <__divsf3_pse+0x2c>
 3ee:	2b d0       	rcall	.+86     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 3f0:	fe 2f       	mov	r31, r30
 3f2:	29 d0       	rcall	.+82     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 3f4:	66 0f       	add	r22, r22
 3f6:	77 1f       	adc	r23, r23
 3f8:	88 1f       	adc	r24, r24
 3fa:	bb 1f       	adc	r27, r27
 3fc:	26 17       	cp	r18, r22
 3fe:	37 07       	cpc	r19, r23
 400:	48 07       	cpc	r20, r24
 402:	ab 07       	cpc	r26, r27
 404:	b0 e8       	ldi	r27, 0x80	; 128
 406:	09 f0       	breq	.+2      	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 408:	bb 0b       	sbc	r27, r27
 40a:	80 2d       	mov	r24, r0
 40c:	bf 01       	movw	r22, r30
 40e:	ff 27       	eor	r31, r31
 410:	93 58       	subi	r25, 0x83	; 131
 412:	5f 4f       	sbci	r21, 0xFF	; 255
 414:	3a f0       	brmi	.+14     	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 416:	9e 3f       	cpi	r25, 0xFE	; 254
 418:	51 05       	cpc	r21, r1
 41a:	78 f0       	brcs	.+30     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 41c:	0c 94 a1 02 	jmp	0x542	; 0x542 <__fp_inf>
 420:	0c 94 ec 02 	jmp	0x5d8	; 0x5d8 <__fp_szero>
 424:	5f 3f       	cpi	r21, 0xFF	; 255
 426:	e4 f3       	brlt	.-8      	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 428:	98 3e       	cpi	r25, 0xE8	; 232
 42a:	d4 f3       	brlt	.-12     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 42c:	86 95       	lsr	r24
 42e:	77 95       	ror	r23
 430:	67 95       	ror	r22
 432:	b7 95       	ror	r27
 434:	f7 95       	ror	r31
 436:	9f 5f       	subi	r25, 0xFF	; 255
 438:	c9 f7       	brne	.-14     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 43a:	88 0f       	add	r24, r24
 43c:	91 1d       	adc	r25, r1
 43e:	96 95       	lsr	r25
 440:	87 95       	ror	r24
 442:	97 f9       	bld	r25, 7
 444:	08 95       	ret
 446:	e1 e0       	ldi	r30, 0x01	; 1
 448:	66 0f       	add	r22, r22
 44a:	77 1f       	adc	r23, r23
 44c:	88 1f       	adc	r24, r24
 44e:	bb 1f       	adc	r27, r27
 450:	62 17       	cp	r22, r18
 452:	73 07       	cpc	r23, r19
 454:	84 07       	cpc	r24, r20
 456:	ba 07       	cpc	r27, r26
 458:	20 f0       	brcs	.+8      	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
 45a:	62 1b       	sub	r22, r18
 45c:	73 0b       	sbc	r23, r19
 45e:	84 0b       	sbc	r24, r20
 460:	ba 0b       	sbc	r27, r26
 462:	ee 1f       	adc	r30, r30
 464:	88 f7       	brcc	.-30     	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
 466:	e0 95       	com	r30
 468:	08 95       	ret

0000046a <__fixunssfsi>:
 46a:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <__fp_splitA>
 46e:	88 f0       	brcs	.+34     	; 0x492 <__fixunssfsi+0x28>
 470:	9f 57       	subi	r25, 0x7F	; 127
 472:	98 f0       	brcs	.+38     	; 0x49a <__fixunssfsi+0x30>
 474:	b9 2f       	mov	r27, r25
 476:	99 27       	eor	r25, r25
 478:	b7 51       	subi	r27, 0x17	; 23
 47a:	b0 f0       	brcs	.+44     	; 0x4a8 <__fixunssfsi+0x3e>
 47c:	e1 f0       	breq	.+56     	; 0x4b6 <__fixunssfsi+0x4c>
 47e:	66 0f       	add	r22, r22
 480:	77 1f       	adc	r23, r23
 482:	88 1f       	adc	r24, r24
 484:	99 1f       	adc	r25, r25
 486:	1a f0       	brmi	.+6      	; 0x48e <__fixunssfsi+0x24>
 488:	ba 95       	dec	r27
 48a:	c9 f7       	brne	.-14     	; 0x47e <__fixunssfsi+0x14>
 48c:	14 c0       	rjmp	.+40     	; 0x4b6 <__fixunssfsi+0x4c>
 48e:	b1 30       	cpi	r27, 0x01	; 1
 490:	91 f0       	breq	.+36     	; 0x4b6 <__fixunssfsi+0x4c>
 492:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <__fp_zero>
 496:	b1 e0       	ldi	r27, 0x01	; 1
 498:	08 95       	ret
 49a:	0c 94 eb 02 	jmp	0x5d6	; 0x5d6 <__fp_zero>
 49e:	67 2f       	mov	r22, r23
 4a0:	78 2f       	mov	r23, r24
 4a2:	88 27       	eor	r24, r24
 4a4:	b8 5f       	subi	r27, 0xF8	; 248
 4a6:	39 f0       	breq	.+14     	; 0x4b6 <__fixunssfsi+0x4c>
 4a8:	b9 3f       	cpi	r27, 0xF9	; 249
 4aa:	cc f3       	brlt	.-14     	; 0x49e <__fixunssfsi+0x34>
 4ac:	86 95       	lsr	r24
 4ae:	77 95       	ror	r23
 4b0:	67 95       	ror	r22
 4b2:	b3 95       	inc	r27
 4b4:	d9 f7       	brne	.-10     	; 0x4ac <__fixunssfsi+0x42>
 4b6:	3e f4       	brtc	.+14     	; 0x4c6 <__fixunssfsi+0x5c>
 4b8:	90 95       	com	r25
 4ba:	80 95       	com	r24
 4bc:	70 95       	com	r23
 4be:	61 95       	neg	r22
 4c0:	7f 4f       	sbci	r23, 0xFF	; 255
 4c2:	8f 4f       	sbci	r24, 0xFF	; 255
 4c4:	9f 4f       	sbci	r25, 0xFF	; 255
 4c6:	08 95       	ret

000004c8 <__floatunsisf>:
 4c8:	e8 94       	clt
 4ca:	09 c0       	rjmp	.+18     	; 0x4de <__floatsisf+0x12>

000004cc <__floatsisf>:
 4cc:	97 fb       	bst	r25, 7
 4ce:	3e f4       	brtc	.+14     	; 0x4de <__floatsisf+0x12>
 4d0:	90 95       	com	r25
 4d2:	80 95       	com	r24
 4d4:	70 95       	com	r23
 4d6:	61 95       	neg	r22
 4d8:	7f 4f       	sbci	r23, 0xFF	; 255
 4da:	8f 4f       	sbci	r24, 0xFF	; 255
 4dc:	9f 4f       	sbci	r25, 0xFF	; 255
 4de:	99 23       	and	r25, r25
 4e0:	a9 f0       	breq	.+42     	; 0x50c <__stack+0xd>
 4e2:	f9 2f       	mov	r31, r25
 4e4:	96 e9       	ldi	r25, 0x96	; 150
 4e6:	bb 27       	eor	r27, r27
 4e8:	93 95       	inc	r25
 4ea:	f6 95       	lsr	r31
 4ec:	87 95       	ror	r24
 4ee:	77 95       	ror	r23
 4f0:	67 95       	ror	r22
 4f2:	b7 95       	ror	r27
 4f4:	f1 11       	cpse	r31, r1
 4f6:	f8 cf       	rjmp	.-16     	; 0x4e8 <__floatsisf+0x1c>
 4f8:	fa f4       	brpl	.+62     	; 0x538 <__stack+0x39>
 4fa:	bb 0f       	add	r27, r27
 4fc:	11 f4       	brne	.+4      	; 0x502 <__stack+0x3>
 4fe:	60 ff       	sbrs	r22, 0
 500:	1b c0       	rjmp	.+54     	; 0x538 <__stack+0x39>
 502:	6f 5f       	subi	r22, 0xFF	; 255
 504:	7f 4f       	sbci	r23, 0xFF	; 255
 506:	8f 4f       	sbci	r24, 0xFF	; 255
 508:	9f 4f       	sbci	r25, 0xFF	; 255
 50a:	16 c0       	rjmp	.+44     	; 0x538 <__stack+0x39>
 50c:	88 23       	and	r24, r24
 50e:	11 f0       	breq	.+4      	; 0x514 <__stack+0x15>
 510:	96 e9       	ldi	r25, 0x96	; 150
 512:	11 c0       	rjmp	.+34     	; 0x536 <__stack+0x37>
 514:	77 23       	and	r23, r23
 516:	21 f0       	breq	.+8      	; 0x520 <__stack+0x21>
 518:	9e e8       	ldi	r25, 0x8E	; 142
 51a:	87 2f       	mov	r24, r23
 51c:	76 2f       	mov	r23, r22
 51e:	05 c0       	rjmp	.+10     	; 0x52a <__stack+0x2b>
 520:	66 23       	and	r22, r22
 522:	71 f0       	breq	.+28     	; 0x540 <__stack+0x41>
 524:	96 e8       	ldi	r25, 0x86	; 134
 526:	86 2f       	mov	r24, r22
 528:	70 e0       	ldi	r23, 0x00	; 0
 52a:	60 e0       	ldi	r22, 0x00	; 0
 52c:	2a f0       	brmi	.+10     	; 0x538 <__stack+0x39>
 52e:	9a 95       	dec	r25
 530:	66 0f       	add	r22, r22
 532:	77 1f       	adc	r23, r23
 534:	88 1f       	adc	r24, r24
 536:	da f7       	brpl	.-10     	; 0x52e <__stack+0x2f>
 538:	88 0f       	add	r24, r24
 53a:	96 95       	lsr	r25
 53c:	87 95       	ror	r24
 53e:	97 f9       	bld	r25, 7
 540:	08 95       	ret

00000542 <__fp_inf>:
 542:	97 f9       	bld	r25, 7
 544:	9f 67       	ori	r25, 0x7F	; 127
 546:	80 e8       	ldi	r24, 0x80	; 128
 548:	70 e0       	ldi	r23, 0x00	; 0
 54a:	60 e0       	ldi	r22, 0x00	; 0
 54c:	08 95       	ret

0000054e <__fp_nan>:
 54e:	9f ef       	ldi	r25, 0xFF	; 255
 550:	80 ec       	ldi	r24, 0xC0	; 192
 552:	08 95       	ret

00000554 <__fp_pscA>:
 554:	00 24       	eor	r0, r0
 556:	0a 94       	dec	r0
 558:	16 16       	cp	r1, r22
 55a:	17 06       	cpc	r1, r23
 55c:	18 06       	cpc	r1, r24
 55e:	09 06       	cpc	r0, r25
 560:	08 95       	ret

00000562 <__fp_pscB>:
 562:	00 24       	eor	r0, r0
 564:	0a 94       	dec	r0
 566:	12 16       	cp	r1, r18
 568:	13 06       	cpc	r1, r19
 56a:	14 06       	cpc	r1, r20
 56c:	05 06       	cpc	r0, r21
 56e:	08 95       	ret

00000570 <__fp_round>:
 570:	09 2e       	mov	r0, r25
 572:	03 94       	inc	r0
 574:	00 0c       	add	r0, r0
 576:	11 f4       	brne	.+4      	; 0x57c <__fp_round+0xc>
 578:	88 23       	and	r24, r24
 57a:	52 f0       	brmi	.+20     	; 0x590 <__fp_round+0x20>
 57c:	bb 0f       	add	r27, r27
 57e:	40 f4       	brcc	.+16     	; 0x590 <__fp_round+0x20>
 580:	bf 2b       	or	r27, r31
 582:	11 f4       	brne	.+4      	; 0x588 <__fp_round+0x18>
 584:	60 ff       	sbrs	r22, 0
 586:	04 c0       	rjmp	.+8      	; 0x590 <__fp_round+0x20>
 588:	6f 5f       	subi	r22, 0xFF	; 255
 58a:	7f 4f       	sbci	r23, 0xFF	; 255
 58c:	8f 4f       	sbci	r24, 0xFF	; 255
 58e:	9f 4f       	sbci	r25, 0xFF	; 255
 590:	08 95       	ret

00000592 <__fp_split3>:
 592:	57 fd       	sbrc	r21, 7
 594:	90 58       	subi	r25, 0x80	; 128
 596:	44 0f       	add	r20, r20
 598:	55 1f       	adc	r21, r21
 59a:	59 f0       	breq	.+22     	; 0x5b2 <__fp_splitA+0x10>
 59c:	5f 3f       	cpi	r21, 0xFF	; 255
 59e:	71 f0       	breq	.+28     	; 0x5bc <__fp_splitA+0x1a>
 5a0:	47 95       	ror	r20

000005a2 <__fp_splitA>:
 5a2:	88 0f       	add	r24, r24
 5a4:	97 fb       	bst	r25, 7
 5a6:	99 1f       	adc	r25, r25
 5a8:	61 f0       	breq	.+24     	; 0x5c2 <__fp_splitA+0x20>
 5aa:	9f 3f       	cpi	r25, 0xFF	; 255
 5ac:	79 f0       	breq	.+30     	; 0x5cc <__fp_splitA+0x2a>
 5ae:	87 95       	ror	r24
 5b0:	08 95       	ret
 5b2:	12 16       	cp	r1, r18
 5b4:	13 06       	cpc	r1, r19
 5b6:	14 06       	cpc	r1, r20
 5b8:	55 1f       	adc	r21, r21
 5ba:	f2 cf       	rjmp	.-28     	; 0x5a0 <__fp_split3+0xe>
 5bc:	46 95       	lsr	r20
 5be:	f1 df       	rcall	.-30     	; 0x5a2 <__fp_splitA>
 5c0:	08 c0       	rjmp	.+16     	; 0x5d2 <__fp_splitA+0x30>
 5c2:	16 16       	cp	r1, r22
 5c4:	17 06       	cpc	r1, r23
 5c6:	18 06       	cpc	r1, r24
 5c8:	99 1f       	adc	r25, r25
 5ca:	f1 cf       	rjmp	.-30     	; 0x5ae <__fp_splitA+0xc>
 5cc:	86 95       	lsr	r24
 5ce:	71 05       	cpc	r23, r1
 5d0:	61 05       	cpc	r22, r1
 5d2:	08 94       	sec
 5d4:	08 95       	ret

000005d6 <__fp_zero>:
 5d6:	e8 94       	clt

000005d8 <__fp_szero>:
 5d8:	bb 27       	eor	r27, r27
 5da:	66 27       	eor	r22, r22
 5dc:	77 27       	eor	r23, r23
 5de:	cb 01       	movw	r24, r22
 5e0:	97 f9       	bld	r25, 7
 5e2:	08 95       	ret

000005e4 <__mulsf3>:
 5e4:	0e 94 05 03 	call	0x60a	; 0x60a <__mulsf3x>
 5e8:	0c 94 b8 02 	jmp	0x570	; 0x570 <__fp_round>
 5ec:	0e 94 aa 02 	call	0x554	; 0x554 <__fp_pscA>
 5f0:	38 f0       	brcs	.+14     	; 0x600 <__mulsf3+0x1c>
 5f2:	0e 94 b1 02 	call	0x562	; 0x562 <__fp_pscB>
 5f6:	20 f0       	brcs	.+8      	; 0x600 <__mulsf3+0x1c>
 5f8:	95 23       	and	r25, r21
 5fa:	11 f0       	breq	.+4      	; 0x600 <__mulsf3+0x1c>
 5fc:	0c 94 a1 02 	jmp	0x542	; 0x542 <__fp_inf>
 600:	0c 94 a7 02 	jmp	0x54e	; 0x54e <__fp_nan>
 604:	11 24       	eor	r1, r1
 606:	0c 94 ec 02 	jmp	0x5d8	; 0x5d8 <__fp_szero>

0000060a <__mulsf3x>:
 60a:	0e 94 c9 02 	call	0x592	; 0x592 <__fp_split3>
 60e:	70 f3       	brcs	.-36     	; 0x5ec <__mulsf3+0x8>

00000610 <__mulsf3_pse>:
 610:	95 9f       	mul	r25, r21
 612:	c1 f3       	breq	.-16     	; 0x604 <__mulsf3+0x20>
 614:	95 0f       	add	r25, r21
 616:	50 e0       	ldi	r21, 0x00	; 0
 618:	55 1f       	adc	r21, r21
 61a:	62 9f       	mul	r22, r18
 61c:	f0 01       	movw	r30, r0
 61e:	72 9f       	mul	r23, r18
 620:	bb 27       	eor	r27, r27
 622:	f0 0d       	add	r31, r0
 624:	b1 1d       	adc	r27, r1
 626:	63 9f       	mul	r22, r19
 628:	aa 27       	eor	r26, r26
 62a:	f0 0d       	add	r31, r0
 62c:	b1 1d       	adc	r27, r1
 62e:	aa 1f       	adc	r26, r26
 630:	64 9f       	mul	r22, r20
 632:	66 27       	eor	r22, r22
 634:	b0 0d       	add	r27, r0
 636:	a1 1d       	adc	r26, r1
 638:	66 1f       	adc	r22, r22
 63a:	82 9f       	mul	r24, r18
 63c:	22 27       	eor	r18, r18
 63e:	b0 0d       	add	r27, r0
 640:	a1 1d       	adc	r26, r1
 642:	62 1f       	adc	r22, r18
 644:	73 9f       	mul	r23, r19
 646:	b0 0d       	add	r27, r0
 648:	a1 1d       	adc	r26, r1
 64a:	62 1f       	adc	r22, r18
 64c:	83 9f       	mul	r24, r19
 64e:	a0 0d       	add	r26, r0
 650:	61 1d       	adc	r22, r1
 652:	22 1f       	adc	r18, r18
 654:	74 9f       	mul	r23, r20
 656:	33 27       	eor	r19, r19
 658:	a0 0d       	add	r26, r0
 65a:	61 1d       	adc	r22, r1
 65c:	23 1f       	adc	r18, r19
 65e:	84 9f       	mul	r24, r20
 660:	60 0d       	add	r22, r0
 662:	21 1d       	adc	r18, r1
 664:	82 2f       	mov	r24, r18
 666:	76 2f       	mov	r23, r22
 668:	6a 2f       	mov	r22, r26
 66a:	11 24       	eor	r1, r1
 66c:	9f 57       	subi	r25, 0x7F	; 127
 66e:	50 40       	sbci	r21, 0x00	; 0
 670:	9a f0       	brmi	.+38     	; 0x698 <__mulsf3_pse+0x88>
 672:	f1 f0       	breq	.+60     	; 0x6b0 <__mulsf3_pse+0xa0>
 674:	88 23       	and	r24, r24
 676:	4a f0       	brmi	.+18     	; 0x68a <__mulsf3_pse+0x7a>
 678:	ee 0f       	add	r30, r30
 67a:	ff 1f       	adc	r31, r31
 67c:	bb 1f       	adc	r27, r27
 67e:	66 1f       	adc	r22, r22
 680:	77 1f       	adc	r23, r23
 682:	88 1f       	adc	r24, r24
 684:	91 50       	subi	r25, 0x01	; 1
 686:	50 40       	sbci	r21, 0x00	; 0
 688:	a9 f7       	brne	.-22     	; 0x674 <__mulsf3_pse+0x64>
 68a:	9e 3f       	cpi	r25, 0xFE	; 254
 68c:	51 05       	cpc	r21, r1
 68e:	80 f0       	brcs	.+32     	; 0x6b0 <__mulsf3_pse+0xa0>
 690:	0c 94 a1 02 	jmp	0x542	; 0x542 <__fp_inf>
 694:	0c 94 ec 02 	jmp	0x5d8	; 0x5d8 <__fp_szero>
 698:	5f 3f       	cpi	r21, 0xFF	; 255
 69a:	e4 f3       	brlt	.-8      	; 0x694 <__mulsf3_pse+0x84>
 69c:	98 3e       	cpi	r25, 0xE8	; 232
 69e:	d4 f3       	brlt	.-12     	; 0x694 <__mulsf3_pse+0x84>
 6a0:	86 95       	lsr	r24
 6a2:	77 95       	ror	r23
 6a4:	67 95       	ror	r22
 6a6:	b7 95       	ror	r27
 6a8:	f7 95       	ror	r31
 6aa:	e7 95       	ror	r30
 6ac:	9f 5f       	subi	r25, 0xFF	; 255
 6ae:	c1 f7       	brne	.-16     	; 0x6a0 <__mulsf3_pse+0x90>
 6b0:	fe 2b       	or	r31, r30
 6b2:	88 0f       	add	r24, r24
 6b4:	91 1d       	adc	r25, r1
 6b6:	96 95       	lsr	r25
 6b8:	87 95       	ror	r24
 6ba:	97 f9       	bld	r25, 7
 6bc:	08 95       	ret

000006be <__umulhisi3>:
 6be:	a2 9f       	mul	r26, r18
 6c0:	b0 01       	movw	r22, r0
 6c2:	b3 9f       	mul	r27, r19
 6c4:	c0 01       	movw	r24, r0
 6c6:	a3 9f       	mul	r26, r19
 6c8:	70 0d       	add	r23, r0
 6ca:	81 1d       	adc	r24, r1
 6cc:	11 24       	eor	r1, r1
 6ce:	91 1d       	adc	r25, r1
 6d0:	b2 9f       	mul	r27, r18
 6d2:	70 0d       	add	r23, r0
 6d4:	81 1d       	adc	r24, r1
 6d6:	11 24       	eor	r1, r1
 6d8:	91 1d       	adc	r25, r1
 6da:	08 95       	ret

000006dc <_exit>:
 6dc:	f8 94       	cli

000006de <__stop_program>:
 6de:	ff cf       	rjmp	.-2      	; 0x6de <__stop_program>
